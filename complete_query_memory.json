[
  {
    "question": "Show payment trends over time",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%m') AS period, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE p.status = 'ACTIVE' GROUP BY period ORDER BY period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T15:50:56.894831",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "medium",
    "success_score": 0.0
  },
  {
    "question": "show me weekley trends strating from june",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%U') AS week, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE DATE_FORMAT(p.created_date, '%Y-%m') >= '2025-06' GROUP BY week",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T15:51:29.582556",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "medium",
    "success_score": 0.0,
    "improvement_suggestion": "i asked to show which means a graph",
    "improvement_category": "general_improvement"
  },
  {
    "question": "show me weekly trends starting from may",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%W') AS week, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE DATE_FORMAT(p.created_date, '%Y-%m') >= '2025-05' GROUP BY week",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T15:51:48.892618",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "visualize it",
    "sql": "SELECT DATE_FORMAT(created_date, '%Y-%m') AS period, SUM(trans_amount_decimal) AS total_revenue FROM subscription_payment_details GROUP BY period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T15:52:21.857211",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 0.0,
    "improvement_suggestion": "i asked to visualise the weekley trend not the monthly trend",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Show payment trends over time",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%m') AS period, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE p.status = 'ACTIVE' GROUP BY period ORDER BY period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T15:57:49.028888",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "medium",
    "success_score": 0.0,
    "improvement_suggestion": "i want weekly trends staring from may",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Show payment trends over time",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%M %Y') AS period, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE p.status = 'ACTIVE' GROUP BY period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T15:58:10.883173",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "medium",
    "success_score": 0.0,
    "improvement_suggestion": "weekly trends wanted",
    "improvement_category": "general_improvement"
  },
  {
    "question": "Show payment trends over time weekley from may",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%m-%d') AS period, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE DATE(p.created_date) >= '2025-05-01' GROUP BY DATE_FORMAT(p.created_date, '%Y-%m-%d')",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T15:58:27.877040",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "Show payment trends over time",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%m') AS period, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p WHERE p.status = 'ACTIVE' GROUP BY period ORDER BY period",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T16:15:36.899265",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "simple",
    "success_score": 0.0
  },
  {
    "question": "show me weekley trends from may instead of monthly",
    "sql": "SELECT DATE_FORMAT(p.created_date, '%Y-%u') AS week, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p WHERE DATE_FORMAT(p.created_date, '%Y-%m') = '2025-05' GROUP BY week ORDER BY week",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T16:16:04.854230",
    "chart_type": null,
    "query_category": "trend_analysis",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "Tell me the last date for which data is available",
    "sql": "SELECT MAX(created_date) FROM subscription_payment_details",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T16:16:19.253039",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "total payments done by top merchant in each week",
    "sql": "SELECT week, merchant_user_id, total_payments FROM ( SELECT YEARWEEK(p.created_date, 1) as week, c.merchant_user_id, SUM(p.trans_amount_decimal) as total_payments, ROW_NUMBER() OVER (PARTITION BY YEARWEEK(p.created_date, 1) ORDER BY SUM(p.trans_amount_decimal) DESC) as rn FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE p.status = 'ACTIVE' GROUP BY YEARWEEK(p.created_date, 1), c.merchant_user_id ) ranked WHERE rn = 1 ORDER BY week",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T16:22:20.422489",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "i want the weekley total payments of the top merchant",
    "improvement_category": "general_improvement"
  },
  {
    "question": "give me the weekley total payments of the top merchant",
    "sql": "SELECT YEARWEEK(p.created_date, 1) AS week, SUM(p.trans_amount_decimal) AS total_payments FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE p.status = 'ACTIVE' AND c.merchant_user_id = (SELECT c2.merchant_user_id FROM subscription_payment_details p2 JOIN subscription_contract_v2 c2 ON p2.subscription_id = c2.subscription_id WHERE p2.status = 'ACTIVE' GROUP BY c2.merchant_user_id ORDER BY SUM(p2.trans_amount_decimal) DESC LIMIT 1) GROUP BY YEARWEEK(p.created_date, 1) ORDER BY week",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T16:26:20.729443",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "you should also mention the merchant id of the user",
    "improvement_category": "general_improvement"
  },
  {
    "question": "give me the weekley total payments of the top merchant",
    "sql": "SELECT YEARWEEK(p.created_date, 1) as week, c.merchant_user_id, SUM(p.trans_amount_decimal) as total_payments FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE p.status = 'ACTIVE' AND c.merchant_user_id = (SELECT c2.merchant_user_id FROM subscription_payment_details p2 JOIN subscription_contract_v2 c2 ON p2.subscription_id = c2.subscription_id WHERE p2.status = 'ACTIVE' GROUP BY c2.merchant_user_id ORDER BY SUM(p2.trans_amount_decimal) DESC LIMIT 1) GROUP BY YEARWEEK(p.created_date, 1), c.merchant_user_id ORDER BY week",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T16:31:38.610367",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "Show payment success rate for merchants with more than 1 transactions",
    "sql": "SELECT c.merchant_user_id, COUNT(*) AS transaction_count, SUM(CASE WHEN p.status = 'ACTIVE' THEN 1 ELSE 0 END) AS successful_transactions FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id GROUP BY c.merchant_user_id HAVING COUNT(*) > 1",
    "was_helpful": false,
    "feedback_type": "negative",
    "timestamp": "2025-06-30T16:32:27.250087",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "complex",
    "success_score": 0.0,
    "improvement_suggestion": "dont give graph unless speicified",
    "improvement_category": "general_improvement"
  },
  {
    "question": "try again",
    "sql": "SELECT c.merchant_user_id, COUNT(*) AS transaction_count, SUM(CASE WHEN p.status = 'ACTIVE' THEN 1 ELSE 0 END) AS successful_transactions FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id GROUP BY c.merchant_user_id HAVING COUNT(*) > 1",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T16:32:45.567473",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "complex",
    "success_score": 1.0
  },
  {
    "question": "what is the average amt spent per transaction by the top 5 highest revenue generating clients. amt means amount",
    "sql": "SELECT c.merchant_user_id, SUM(p.trans_amount_decimal) AS total_revenue FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE p.status = 'ACTIVE' GROUP BY c.merchant_user_id ORDER BY total_revenue DESC LIMIT 5",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T16:35:18.509921",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "highest total payments are by which merchant",
    "sql": "SELECT c.merchant_user_id, SUM(p.trans_amount_decimal) AS total_payments FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE p.status = 'ACTIVE' GROUP BY c.merchant_user_id ORDER BY total_payments DESC LIMIT 1",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T16:36:22.481318",
    "chart_type": null,
    "query_category": "user_analysis",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "Number of subscriptions on 24 april 2025",
    "sql": "SELECT COUNT(*) as num_subscriptions FROM subscription_contract_v2 WHERE DATE(subcription_start_date) = '2025-04-24'",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-06-30T16:39:34.985405",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "total subscriptions in 2023",
    "sql": "SELECT COUNT(*) as total_subscriptions_2023 FROM subscription_contract_v2 WHERE DATE_FORMAT(subcription_start_date, '%Y') = '2023'",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-01T11:58:52.715446",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "when was the first subscription",
    "sql": "SELECT MIN (subcription_start_date) as first_subscription FROM subscription_contract_v2",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-01T11:59:36.800163",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "show all transaction details in 2023",
    "sql": "SELECT p.subscription_id, p.status, p.trans_amount_decimal, p.created_date, c.merchant_user_id FROM subscription_payment_details p JOIN subscription_contract_v2 c ON p.subscription_id = c.subscription_id WHERE DATE_FORMAT(p.created_date, '%Y') = '2023'",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-01T12:00:12.098095",
    "chart_type": null,
    "query_category": "general_query",
    "sql_complexity": "medium",
    "success_score": 1.0
  },
  {
    "question": "in which month we had the highest payment success rate",
    "sql": "SELECT DATE_FORMAT(created_date, '%Y-%m') AS payment_month, SUM(CASE WHEN status = 'ACTIVE' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS success_rate FROM subscription_payment_details GROUP BY payment_month ORDER BY success_rate DESC LIMIT 1;",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-01T12:01:28.133185",
    "chart_type": null,
    "query_category": "rate_analysis",
    "sql_complexity": "simple",
    "success_score": 1.0
  },
  {
    "question": "generate a pie chart of payment success rate for april 2025",
    "sql": "\nSELECT \n    CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END as category,\n    COUNT(*) as value\nFROM subscription_payment_details\nWHERE DATE_FORMAT(created_date, '%Y-%m') = '2025-04' GROUP BY CASE WHEN status = 'ACTIVE' THEN 'Successful' ELSE 'Failed' END\n",
    "was_helpful": true,
    "feedback_type": "positive",
    "timestamp": "2025-07-01T12:52:28.717671",
    "chart_type": null,
    "query_category": "pie_chart_request",
    "sql_complexity": "simple",
    "success_score": 1.0
  }
]